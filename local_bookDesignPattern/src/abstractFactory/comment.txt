AbstractFactoryは一言でいうと、「関連する部品を組み立てて製品を作る」

大本となる抽象クラスのfactoryを作る。
これには工場自体の作り方と、大体の部品の目録が乗っている。

具象クラスのfactoryには
目録にある、実際の部品の作り方が乗っている。

mainで、
工場を実際に作って(new)して、
その工場から、部品を作って(new)して、
あとはmainとか、工場から作った部品を組み合わせて、なんかやるみたいな

------------------------------
使いどころとしては、
具体的な工場を追加して、処理を変える分には色々出来て便利。

ただ、抽象的な工場に新たにメソッドを加えるとかロジックを追加するときは手間。
具体的な工場を作っているだけ、多くの修正が必要。
この辺は現実世界と一緒。
工場自体を作るにはコストとか手間とか規模が大きくて何ともならないことは多いけど、
工場の中で作るものに関しては色々応用が聞いて便利みたいな。


※UMLはplantUMLだときついので略
















